#!/usr/bin/wish

package require sqlite3

package require sude
package require Sudet
#source ~/Projets/Publiés/sudev.sh/Sudet.tcl
#source ~/Projets/Publiés/sudev.sh/sude.tcl

tk scaling 1.2
wm attributes . -zoomed 1

set defaultPadding 4

#################
# Procédures
#################

proc sudetLoadDirectory {} {
	cd [tk_chooseDirectory]
	sudetLoadCurentDirectory
}

proc sudetLoadCurentDirectory {} {
	global filelist
	global filteredFileList

	set filelist [glob -nocomplain {[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]*.txt}]

	if {[llength $filelist] > 0} {
		::Sudet::dbConnect
		::Sudet::dbSync
		set filteredFileList  [::Sudet::getAllFiles]
		makeFiltersList
		makeTagsList
		loadFirstFile
	}
}

proc updateFilteredList {} {

	global filtersValues
	global filteredFileList

	set selectedTags {}
	set allTags [::Sudet::getAllTags]

	if {[llength $allTags] > 0} {
		for {set i 0} {$i < [llength $allTags]} {incr i} {
			if {[expr $filtersValues($i) == 1]} {
				lappend selectedTags [lindex $allTags $i]
			}
		}
	}

	if {[llength $selectedTags] > 0} {
		set query "SELECT DISTINCT fichier FROM etiquettes WHERE etiquette=\"[lindex $selectedTags 0]\""

		for {set i 1} {$i < [llength $selectedTags]} {incr i} {
			append query " OR etiquette=\"[lindex $selectedTags $i]\""
		}

		set filteredFileList  [db eval $query]
	} else {
		set filteredFileList  [::Sudet::getAllFiles]
	}
	loadFirstFile
}

proc filterNoTags {} {
	global filteredFileList
	global varFilterNoTags
	
	if {$varFilterNoTags == 1} {
		foreach f [winfo children .col1.fr1.frTag] {
			$f configure -state disabled
		}
		set filteredFileList  [db eval "SELECT DISTINCT fichier FROM untagged;"]

		loadFirstFile
	} else { 
		foreach f [winfo children .col1.fr1.frTag] {
			$f configure -state normal
		}
		updateFilteredList 
	}
}

proc loadfile {} {
	global filteredFileList
	global curentfile

	set curindex [.col1.fr2.lf curselection]
	if {$curindex != ""} {
		set curentfile [lindex $filteredFileList $curindex]
		::sude::display $curentfile .c
		updateTagsList
	}
}

proc updateTagsList {} {
	global curentfile
	global tagValues

	set allCb [winfo children .col3.fr1]
	set allTags [::Sudet::getAllTags]
	set activeTags [::Sudet::getTags $curentfile]

	for {set i 0} {$i < [llength $allTags]} {incr i} {
		set activeTagIndex [lsearch $activeTags [lindex $allTags $i]]

		if {$activeTagIndex >= 0} {
			[lindex $allCb $i] select 
		} else { 
			[lindex $allCb $i] deselect 
		}
	}
}

proc pushTagsList {} {

	global curentfile
	global tagValues

	set allCb [winfo children .col3.fr1]
	set allTags [::Sudet::getAllTags]
	set activeTags [::Sudet::getTags $curentfile]

	set modifiedTags 0
	
	for {set i 0} {$i < [llength $allTags]} {incr i} {
		set tagText [lindex $allTags $i]
		set activeTagIndex [lsearch $activeTags $tagText]

		if {[expr $tagValues($i) == 0 && $activeTagIndex >= 0]} {
			::Sudet::removeTag $curentfile $tagText
			incr modifiedTags
		} elseif {[expr $tagValues($i) == 1 && $activeTagIndex == -1 ]} {
			::Sudet::insertTag $curentfile $tagText
			incr modifiedTags
		}

		if {$modifiedTags > 0} {makeFiltersList}
	}
}

proc makeTagsList {} {
	destroy .col3.fr1
	labelframe .col3.fr1 -text Étiquettes
	pack .col3.fr1 -in .col3

	foreach tag [::Sudet::getAllTags] {
		addToTagsList .col3.fr1 $tag pushTagsList
	}
}

proc makeFiltersList {} {
	foreach f [winfo children .col1.fr1.frTag] {
		destroy $f
	}

	foreach tag [::Sudet::getAllTags] {
		addToFiltersList .col1.fr1.frTag "$tag ([::Sudet::getOcurence $tag])" updateFilteredList
	}
}

proc addToTagsList {targetFrame tagText cmd {selected false}} {
	set i [llength [winfo children $targetFrame]]
	set newcb [checkbutton $targetFrame.t$i -text $tagText -variable tagValues($i) -command $cmd]
	if {$selected} { $newcb select }
	pack $targetFrame.t$i -in $targetFrame -anchor w
}

proc addToFiltersList {targetFrame tagText cmd {selected false}} {
	set i [llength [winfo children $targetFrame]]
	set newcb [checkbutton $targetFrame.t$i -text $tagText -variable filtersValues($i) -command $cmd]
	if {$selected} { $newcb select }
	pack $targetFrame.t$i -in $targetFrame -anchor w
}

proc newtag {} {
	global curentfile
	
	set w [toplevel .newtagdialog]
	wm attributes .newtagdialog -topmost 1

	label .newtagdialog.label1 -text  "Nouvel étiquette:"
	entry .newtagdialog.entry1 -textvariable newtagvalue
	bind .newtagdialog.entry1 <Return> {.newtagdialog.bok invoke}

	button .newtagdialog.bok -text Valider -command {
		::Sudet::insertTag $curentfile $newtagvalue
		addToTagsList .col3.fr1 $newtagvalue pushTagsList true
		set newtagvalue ""
		destroy .newtagdialog
		makeFiltersList
	}

	pack .newtagdialog.label1 .newtagdialog.entry1 .newtagdialog.bok
	focus .newtagdialog.entry1
}

proc loadFirstFile {} {
	.col1.fr2.lf selection set 0
	focus .col1.fr2.lf
	loadfile
}

#################
# Interface
#################

# Frame premier niveau
# ====================
#
. configure -menu .menu1

frame .col1
frame .col2
frame .col3

pack .col1 -side left -anchor n -fill both -expand false
pack .col2 .col3 -side left -anchor n -fill both -expand true
pack .col3 -side left -anchor n -fill both -expand false -padx 2

# Contenu
# =======

# Menus

menu .menu1
.menu1 add cascade -label Menu -menu .mainmenu

menu .mainmenu -tearoff 0
.mainmenu add command -label {Ouvrir un répertoire} -accelerator (Ctrl+r) -command sudetLoadDirectory
.mainmenu add command -label {Nouvel étiquette} -accelerator (Ctrl+n) -command newtag
.mainmenu add command -label Quiter -accelerator (Ctrl+q) -command exit

# Column 1
# --------

# Filters

labelframe .col1.fr1 -text Filtres
pack .col1.fr1 -in .col1 -side top -fill both -expand false

checkbutton .col1.fr1.cb1 -text "Sans étiquette" -anchor w -variable varFilterNoTags -command filterNoTags
ttk::separator .col1.fr1.s1
label .col1.fr1.label1 -text Étiquettes
frame .col1.fr1.frTag 
pack .col1.fr1.cb1 .col1.fr1.s1  .col1.fr1.frTag -in .col1.fr1 -side top -fill x -expand true -anchor w

# Filelist

labelframe .col1.fr2 -text Fichiers
pack .col1.fr2 -in .col1 -side top -fill both -expand true

listbox .col1.fr2.lf -listvariable filteredFileList
pack .col1.fr2.lf -in .col1.fr2 -side top -fill both -expand true

# Column 2
# --------
set dCanva [canvas .c]
pack .c -in .col2 -fill both -expand true

# Frame 3

#################
# Évènements
#################

bind . <Control-KeyPress-q> exit
bind . <Control-KeyPress-o> sudetLoadDirectory
bind . <Control-KeyPress-n> newtag
bind .c <Configure> {if {[info exists curentfile]} {::sude::display $curentfile .c}}
bind Listbox <Control-KeyPress-n> { }
bind LIstbox <Control-KeyPress-p> { }
bind .col1.fr2.lf <<ListboxSelect>> loadfile

#################
# Initialisaton
#################

sudetLoadCurentDirectory
